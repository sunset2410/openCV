echo "# USB-connect" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:sunset2410/USB-connect.git
git push -u origin master
                
…or push an existing repository from the command line
git remote add origin git@github.com:sunset2410/USB-connect.git
git push -u origin master

git lfs install
git lfs track "*.psd"
git add .gitattributes
git add file.psd
git commit -m "Add design file"
git push origin master
____----------______

cls


git clone https://github.com/sunset2410/USB_Connect


git checkout -b dev

git branch

git push -u origin dev

git status

git add *

git commit  -m  "init project"


git push origin dev


git remote show origin

Các lệnh git cơ bản
1) git config
Tác dụng : Để set user name và email của bạn trong main configuration file.
Cách xài : Để kiểm tra tên và kiểu email trong cấu hình dùng git config -- global user.name và git config -- global user.email. Để set email hoặc tên mới git config -- global user.name = “Hải Nguyễn” và git config -- global user.email = “hainguyen@gmail.com”

2) git init
Tác dụng : Khởi tạo 1 git repository 1 project mới hoặc đã có.

Cách xài: git init trong thư mục gốc của dự án.

3) git clone
Tác dụng: Copy 1 git repository từ remote source.

Cách xài: git clone <:clone git url:>

4) git status
Tác dụng: Để check trạng thái của những file bạn đã thay đổi trong thư mục làm việc. VD: Tất cả các thay đổi cuối cùng từ lần commit cuối cùng.

Cách xài: git status trong thư mục làm việc.

5) git add
Tác dụng: Thêm thay đổi đến stage/index trong thư mục làm việc.

Cách xài: git add

6) git commit
Tác dụng: commit nghĩa là một action để Git lưu lại một snapshot của các sự thay đổi trong thư mục làm việc. Và các tập tin, thư mục được thay đổi đã phải nằm trong Staging Area. Mỗi lần commit nó sẽ được lưu lại lịch sử chỉnh sửa của code kèm theo tên và địa chỉ email của người commit. Ngoài ra trong Git bạn cũng có thể khôi phục lại tập tin trong lịch sử commit của nó để chia cho một branch khác, vì vậy bạn sẽ dễ dàng khôi phục lại các thay đổi trước đó.

Cách dùng: git commit -m ”Đây là message, bạn dùng để note những thay đổi để sau này dễ dò lại”

  5 tip về GitHub cho lập trình viên
7) git push/git pull
Tác dụng: Push hoặc Pull các thay đổi đến remote. Nếu bạn đã added và committed các thay đổi và bạn muốn đẩy nó lên hoặc remote của bạn đã update và bạn apply tất cả thay đổi đó trên code của mình.

Cách dùng: git pull <:remote:> <:branch:> and git push <:remote:> <:branch:>

8) git branch
Tác dụng: liệt kê tất cả các branch (nhánh).

Cách dùng: git branch hoặc git branch -a

9) git checkout
Tác dụng: Chuyển sang branch khác

Cách dùng: git checkout <: branch:> hoặc ** _ git checkout -b <: branch:> nếu bạn muốn tạo và chuyển sang một chi nhánh mới.

10) git stash
Tác dụng: Lưu thay đổi mà bạn không muốn commit ngay lập tức.

Cách dùng: git stash trong thư mục làm việc của bạn.

11) git merge
Tác dụng: Merge 2 branch lại với nahu.

Cách dùng: Chuyển tới branch bạn muốn merge rồi  dùng git merge <:branch_ban_muon_merge:>

12) git reset
Tác dụng: Bạn đã đưa một tập tin nào đó vào Staging Area nhưng bây giờ bạn muốn loại bỏ nó ra khỏi đây để không phải bị commit theo.

Cách dùng: git reset HEAD tên_file

13) git remote
Tác dụng: Để check remote/source bạn có hoặc add thêm remote

Cách dùng: git remote để kiểm tra và liệt kê. Và git remote add <: remote_url:> để thêm.

14) git add
Tác dụng: Để đưa một tập tin vào Staging Area

Cách dùng: git add tên_file hoặc muốn thêm hết file của thư mục thì git add all



------------------------------------cmd--------------------------
(use "git add/rm <file>..." to update what will be committed)
(use "git checkout -- <file>..." to discard changes in working directory)

cls


git status

git  add src/app/cart-header/

git add *

git commit -m "split component"

git push origin dev


git checkout -- src/app/cart-header/cart-header.component.html

 git reset --hard 


git diff  src/app/cart-header/cart-header.component.html


---------------------------------------------

git branch

F:\Project Github\ReactJS>git checkout -b dev


F:\Project Github\ReactJS>git push  -u origin dev


git status


F:\Project Github\ReactJS>git add *


F:\Project Github\ReactJS>git commit -m "add theme"

F:\Project Github\ReactJS>git push origin dev


------ xóa 1 file trong commited local---------


b1: git reset --soft HEAD^ hoặc   git reset --soft HEAD~1
// lệnh này có nhiệm vụ lùi một commit so với commit hiện tại, nhưng ko xóa code.

b2: git reset HEAD conf/app.xml

// xóa file này khỏi commit

bb3: commit lại






